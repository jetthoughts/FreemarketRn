// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders successfully 1`] = `
<RCTScrollView
  style={
    Object {
      "padding": 10,
    }
  }
>
  <View>
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <View
          style={
            Object {
              "height": 150,
              "width": 150,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 1,
                "borderStyle": "dotted",
                "borderWidth": 4,
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              Place for an Image
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "paddingBottom": 10,
              "paddingTop": 10,
              "width": 150,
            }
          }
        >
          <View
            accessibilityComponentType="button"
            accessibilityLabel={undefined}
            accessibilityTraits={
              Array [
                "button",
              ]
            }
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#0C42FD",
                      "fontSize": 18,
                      "padding": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Select Image
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "marginBottom": 10,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#000000",
              "fontSize": 17,
              "fontWeight": "500",
              "marginBottom": 7,
            }
          }
        >
          Name *
        </Text>
        <View
          style={Object {}}
        >
          <TextInput
            accessibilityLabel="Name *"
            autoCapitalize={undefined}
            autoCorrect={undefined}
            autoFocus={undefined}
            blurOnSubmit={undefined}
            clearButtonMode={undefined}
            clearTextOnFocus={undefined}
            editable={undefined}
            enablesReturnKeyAutomatically={undefined}
            keyboardAppearance={undefined}
            keyboardType={undefined}
            maxLength={10}
            multiline={undefined}
            numberOfLines={undefined}
            onBlur={undefined}
            onChange={undefined}
            onChangeText={[Function]}
            onContentSizeChange={undefined}
            onEndEditing={undefined}
            onFocus={undefined}
            onKeyPress={undefined}
            onLayout={undefined}
            onSelectionChange={undefined}
            onSubmitEditing={undefined}
            placeholder={undefined}
            placeholderTextColor={undefined}
            returnKeyType={undefined}
            secureTextEntry={undefined}
            selectTextOnFocus={undefined}
            selectionColor={undefined}
            selectionState={undefined}
            style={
              Object {
                "borderColor": "#cccccc",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#000000",
                "fontSize": 17,
                "height": 36,
                "marginBottom": 5,
                "paddingHorizontal": 7,
                "paddingVertical": 7,
              }
            }
            underlineColorAndroid="transparent"
            value="Misha"
          />
        </View>
      </View>
      <View
        style={
          Object {
            "marginBottom": 10,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#000000",
              "fontSize": 17,
              "fontWeight": "500",
              "marginBottom": 7,
            }
          }
        >
          Description
        </Text>
        <View
          style={Object {}}
        >
          <TextInput
            accessibilityLabel="Description"
            autoCapitalize={undefined}
            autoCorrect={undefined}
            autoFocus={undefined}
            blurOnSubmit={undefined}
            clearButtonMode={undefined}
            clearTextOnFocus={undefined}
            editable={undefined}
            enablesReturnKeyAutomatically={undefined}
            keyboardAppearance={undefined}
            keyboardType={undefined}
            maxLength={undefined}
            multiline={true}
            numberOfLines={4}
            onBlur={undefined}
            onChange={undefined}
            onChangeText={[Function]}
            onContentSizeChange={undefined}
            onEndEditing={undefined}
            onFocus={undefined}
            onKeyPress={undefined}
            onLayout={undefined}
            onSelectionChange={undefined}
            onSubmitEditing={undefined}
            placeholder={undefined}
            placeholderTextColor={undefined}
            returnKeyType={undefined}
            secureTextEntry={undefined}
            selectTextOnFocus={undefined}
            selectionColor={undefined}
            selectionState={undefined}
            style={
              Object {
                "borderColor": "#cccccc",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#000000",
                "fontSize": 17,
                "height": 36,
                "marginBottom": 5,
                "paddingHorizontal": 7,
                "paddingVertical": 7,
              }
            }
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
      </View>
      <View
        style={
          Object {
            "marginBottom": 10,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#000000",
              "fontSize": 17,
              "fontWeight": "500",
              "marginBottom": 7,
            }
          }
        >
          Category *
        </Text>
        <View
          style={
            Array [
              Object {
                "borderColor": "#cccccc",
                "borderRadius": 4,
                "borderWidth": 1,
                "marginBottom": 4,
              },
              Object {},
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 44,
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 17,
                  "paddingLeft": 7,
                }
              }
            >
              &lt; Choose Category &gt;
            </Text>
          </View>
          <View
            style={
              Object {
                "height": 0,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={Object {}}
            >
              <RCTPicker
                items={
                  Array [
                    Object {
                      "label": "< Choose Category >",
                      "textColor": undefined,
                      "value": "",
                    },
                    Object {
                      "label": "Antiques",
                      "textColor": undefined,
                      "value": "0",
                    },
                    Object {
                      "label": "Books, Comics & Magazines",
                      "textColor": undefined,
                      "value": "1",
                    },
                    Object {
                      "label": "Cars, Motorcycles & Vehicles",
                      "textColor": undefined,
                      "value": "2",
                    },
                    Object {
                      "label": "Events Tickets",
                      "textColor": undefined,
                      "value": "3",
                    },
                    Object {
                      "label": "Pet Supplies",
                      "textColor": undefined,
                      "value": "4",
                    },
                  ]
                }
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                selectedIndex={0}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "marginBottom": 10,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#000000",
              "fontSize": 17,
              "fontWeight": "500",
              "marginBottom": 7,
            }
          }
        >
          Price *
        </Text>
        <View
          style={Object {}}
        >
          <TextInput
            accessibilityLabel="Price *"
            autoCapitalize={undefined}
            autoCorrect={undefined}
            autoFocus={undefined}
            blurOnSubmit={undefined}
            clearButtonMode={undefined}
            clearTextOnFocus={undefined}
            editable={undefined}
            enablesReturnKeyAutomatically={undefined}
            keyboardAppearance={undefined}
            keyboardType="numeric"
            maxLength={undefined}
            multiline={undefined}
            numberOfLines={undefined}
            onBlur={undefined}
            onChange={undefined}
            onChangeText={[Function]}
            onContentSizeChange={undefined}
            onEndEditing={undefined}
            onFocus={undefined}
            onKeyPress={undefined}
            onLayout={undefined}
            onSelectionChange={undefined}
            onSubmitEditing={undefined}
            placeholder={undefined}
            placeholderTextColor={undefined}
            returnKeyType={undefined}
            secureTextEntry={undefined}
            selectTextOnFocus={undefined}
            selectionColor={undefined}
            selectionState={undefined}
            style={
              Object {
                "borderColor": "#cccccc",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#000000",
                "fontSize": 17,
                "height": 36,
                "marginBottom": 5,
                "paddingHorizontal": 7,
                "paddingVertical": 7,
              }
            }
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#999999",
              "fontSize": 17,
              "marginBottom": 2,
            }
          }
        >
          Pro tip: better to set affordable price
        </Text>
      </View>
      <View
        style={
          Object {
            "marginBottom": 10,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#000000",
              "fontSize": 17,
              "fontWeight": "500",
              "marginBottom": 7,
            }
          }
        >
          Allow phone *
        </Text>
        <RCTSwitch
          accessibilityLabel="Allow phone *"
          disabled={false}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onTintColor={undefined}
          onValueChange={[Function]}
          style={
            Array [
              Object {
                "height": 31,
                "width": 51,
              },
              Object {
                "marginBottom": 4,
              },
            ]
          }
          thumbTintColor={undefined}
          tintColor={undefined}
          value={false}
        />
      </View>
      <View
        style={
          Object {
            "marginBottom": 10,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#000000",
              "fontSize": 17,
              "fontWeight": "500",
              "marginBottom": 7,
            }
          }
        >
          Phone *
        </Text>
        <TextInput
          accessibilityLabel="Phone *"
          autoCapitalize={undefined}
          autoCorrect={undefined}
          autoFocus={undefined}
          blurOnSubmit={undefined}
          clearButtonMode={undefined}
          clearTextOnFocus={undefined}
          editable={false}
          enablesReturnKeyAutomatically={undefined}
          keyboardAppearance={undefined}
          keyboardType={undefined}
          maxLength={undefined}
          multiline={undefined}
          numberOfLines={undefined}
          onBlur={undefined}
          onChange={undefined}
          onChangeText={[Function]}
          onEndEditing={undefined}
          onFocus={undefined}
          onKeyPress={undefined}
          onLayout={undefined}
          onSelectionChange={undefined}
          onSubmitEditing={undefined}
          options={Object {}}
          placeholder={undefined}
          placeholderTextColor={undefined}
          returnKeyType={undefined}
          secureTextEntry={undefined}
          selectTextOnFocus={undefined}
          selectionColor={undefined}
          selectionState={undefined}
          style={
            Object {
              "backgroundColor": "#eeeeee",
              "borderColor": "#cccccc",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "#777777",
              "fontSize": 17,
              "height": 36,
              "marginBottom": 5,
              "paddingHorizontal": 7,
              "paddingVertical": 7,
            }
          }
          type="cel-phone"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <View
        style={
          Object {
            "marginBottom": 10,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#000000",
              "fontSize": 17,
              "fontWeight": "500",
              "marginBottom": 7,
            }
          }
        >
          End time *
        </Text>
        <View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#000000",
                  "fontSize": 17,
                  "marginBottom": 5,
                  "padding": 7,
                }
              }
            >
              00:00
            </Text>
          </View>
          <View
            style={
              Object {
                "height": 0,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginBottom": 4,
                  },
                  Object {
                    "height": 0,
                  },
                ]
              }
            >
              <RCTDatePicker
                date={949442400000}
                maximumDate={undefined}
                minimumDate={undefined}
                minuteInterval={undefined}
                mode="time"
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "height": 216,
                  }
                }
                timeZoneOffsetInMinutes={undefined}
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "paddingBottom": 10,
          "paddingTop": 10,
        }
      }
    >
      <View
        accessibilityComponentType="button"
        accessibilityLabel={undefined}
        accessibilityTraits={
          Array [
            "button",
          ]
        }
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#0C42FD",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Add Product
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "paddingBottom": 10,
          "paddingTop": 10,
        }
      }
    >
      <View
        accessibilityComponentType="button"
        accessibilityLabel={undefined}
        accessibilityTraits={
          Array [
            "button",
          ]
        }
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#0C42FD",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "red",
                },
              ]
            }
          >
            Back
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
